database wikipedia move sidebar hide main pagecontentscurrent eventsrandom articleabout wikipediacontact us contribute helplearn editcommunity portalrecent changesupload filespecial pages donate personal donate pages logged editors learn contributionstalk contents move sidebar hide top terminology overview history toggle history subsection al dbms relational dbms integrated approach late sql dbms desktop objectoriented nosql newsql use cases classification database management system application toggle application subsection application program interface database storage toggle storage subsection materialized views replication virtualization security transactions concurrency migration building maintaining tuning backup restore static analysis miscellaneous features design modeling toggle design modeling subsection models external conceptual internal views see also notes references sources reading external links toggle table contents database afrikaansaragonsasturianuazrbaycanca bnlmg boarischbosanskibrezhonegcataletinacymraegdanskdeutscheestiespaolesperantoeuskarafranaisfryskgaeilgegalegohrvatskiidobahasa indonesiainterlinguaisizuluslenskaitalianojawakiswahilikurdlatinalatvieulietuvilingua franca novalombardmagyarbahasa melayumirandsnederlandsnorsk bokmlnorsk nynorskoccitan oromooozbekcha piemontispolskiportugusqaraqalpaqsharomnruna simiseelterskshqipsicilianusimple englishsloveninaslovenina srpskisrpskohrvatski suomisvenskatagalog tataratrke uyghurcheting vitwalonwinaray english readview source move sidebar hide actions readview source general links hererelated changesupload filepermanent linkpage informationcite pageget shortened urldownload qr code printable version projects wikimedia commonswikiversitywikidata item move sidebar hide wikipedia free encyclopedia redirected database management systems organized collection data computing article computing concept instances general concept see lists databases suggested data bank merged article discuss proposed since may sql select statement result computing database organized collection data type data store based use database management system dbms software interacts end users applications database capture analyze data dbms additionally encompasses core facilities provided administer database sum total database dbms associated applications referred database system often term database also used loosely refer dbms database system application associated database digital storage retrieval data become widespread index cards used data storage wide range applications environments home record store recipes shopping lists contact information organizational data business record presentation notes project notes contact information schools flash cards visual aids academic hold data bibliographical citations notes card file professional book indexers used index cards creation book indexes replaced indexing software small databases stored file system large databases hosted computer clusters cloud storage design databases spans formal techniques practical considerations including data modeling efficient data representation storage query languages security privacy sensitive data distributed computing issues including supporting concurrent access fault tolerance computer scientists may classify database management systems according database models support relational databases became dominant model data rows columns series tables vast majority use sql writing querying data nonrelational databases became popular collectively referred nosql use different query languages terminology overview formally database refers set related data accessed use database management system dbms integrated set computer software allows users interact one databases provides access data contained database although restrictions may exist limit access particular data dbms provides various functions allow entry storage retrieval large quantities information provides ways manage information organized close relationship term database often used casually refer database dbms used manipulate outside world professional information technology term database often used refer collection related data spreadsheet card index size usage requirements typically necessitate use database management system existing dbmss provide various functions allow management database data classified four main functional groups data definition creation modification removal definitions detail data organized update insertion modification deletion data retrieval selecting data according specified criteria eg query position hierarchy position relation data providing data either directly user making available processing database applications retrieved data may made available less direct form without modification stored database new form obtained altering combining existing data database administration registering monitoring users enforcing data security monitoring performance maintaining data integrity dealing concurrency control recovering information corrupted event unexpected system failure database dbms conform principles particular database model database system refers collectively database model database management system database physically database servers dedicated computers hold actual databases run dbms related software database servers usually multiprocessor computers generous memory raid disk arrays used stable storage hardware database accelerators connected one servers via highspeed channel also used largevolume transaction processing environments dbmss found heart database applications dbmss may built around custom multitasking kernel builtin networking support modern dbmss typically rely standard operating system provide functions since dbmss comprise significant market computer storage vendors often take account dbms requirements development plans databases dbmss categorized according database models support relational xml types computer run server cluster mobile phone query languages used access database sql xquery internal engineering affects performance scalability resilience security history sizes capabilities performance databases respective dbmss grown orders magnitude performance increases enabled technology progress areas processors computer memory computer storage computer networks concept database made possible emergence direct access storage media magnetic disks became widely available mids earlier systems relied sequential storage data magnetic tape subsequent development database technology divided three eras based data model structure al sqlrelational postrelational two main early al data models hierarchical model codasyl model network model characterized use pointers often physical disk addresses follow relationships one record another relational model first proposed edgar f codd departed tradition insisting applications data content rather following links relational model employs sets ledgerstyle tables used different type entity mids computing hardware become powerful enough allow wide deployment relational systems dbmss plus applications early however relational systems dominated largescale data processing applications update remain dominant ibm db oracle mysql microsoft sql server ed dbms dominant database language standardized sql relational model influenced database languages data models object databases developed overcome inconvenience objectrelational impedance mismatch led coining term postrelational also development hybrid objectrelational databases next generation postrelational databases late became known nosql databases introducing fast keyvalue stores documentoriented databases competing next generation known newsql databases attempted new implementations retained relationalsql model aiming match high performance nosql compared commercially available relational dbmss al dbms information al database basic structure al codasyl database model introduction term database coincided availability directaccess storage disks drums mids onwards term represented contrast tapebased systems past allowing shared interactive use rather daily batch processing oxford english dictionary cites report system development corporation california first use term database specific technical sense computers grew speed capability number generalpurpose database systems emerged mids number systems come commercial use interest standard began grow charles bachman author one product integrated data store ids founded database task group within codasyl group responsible creation standardization cobol database task group delivered standard generally became known codasyl approach soon number commercial products based approach entered market codasyl approach offered applications ability navigate around linked data set formed large network applications could find records one three methods use primary key known calc key typically implemented hashing navigating relationships called sets one record another scanning records sequential order later systems added btrees provide alternate access paths many codasyl databases also added declarative query language end users distinct al api however codasyl databases complex required significant training effort produce useful applications ibm also dbms known information management system ims ims development software written apollo program system ims generally similar concept codasyl used strict hierarchy model data instead codasyls network model concepts later became known al databases due way data accessed term popularized bachmans turing award presentation programmer navigator ims classified ibm hierarchical database idms cincom systems total databases classified network databases ims remains use update relational dbms edgar f codd worked ibm san jose california office primarily involved development hard disk systems unhappy al model codasyl approach notably lack facility wrote number papers outlined new approach database construction eventually culminated groundbreaking relational model data large shared data banks paper described new system storing working large databases instead records stored sort linked list freeform records codasyl codds idea organize data number tables table used different type entity table would contain fixed number columns containing attributes entity one columns table designated primary key rows table could uniquely identified crossreferences tables always used primary keys rather disk addresses queries would join tables based key relationships using set operations based mathematical system relational calculus model takes name splitting data set normalized tables relations aimed ensure fact stored thus simplifying update operations virtual tables called views could present data different ways different users views could directly updated codd used mathematical terms define model relations tuples domains rather tables rows columns terminology familiar came early implementations codd would later criticize tendency practical implementations depart mathematical foundations model based relational model records linked using virtual keys stored database defined needed data contained records use primary keys useroriented identifiers represent crosstable relationships rather disk addresses two primary motivations engineering perspective enabled tables relocated resized without expensive database reorganization codd interested difference semantics use explicit identifiers made easier define update operations clean mathematical definitions also enabled query operations defined terms established discipline firstorder predicate calculus operations clean mathematical properties becomes possible rewrite queries provably correct ways basis query optimization loss expressiveness compared hierarchic network models though connections tables longer explicit hierarchic network models records allowed complex internal structure example salary history employee might represented repeating group within employee record relational model process normalization led internal structures replaced data held multiple tables connected logical keys instance common use database system track information users name login information various addresses phone numbers al approach data would placed single variablelength record relational approach data would normalized user table address table phone number table instance records would created optional tables address phone numbers actually provided well identifying rowsrecords using logical identifiers rather disk addresses codd changed way applications assembled data multiple records rather requiring applications gather data one record time navigating links would use declarative query language expressed data required rather access path found finding efficient access path data became responsibility database management system rather application programmer process called query optimization depended fact queries expressed terms mathematical logic codds paper inspired teams various universities subject including one university california berkeley led eugene wong michael stonebraker started ingres using funding already allocated geographical database project student programmers produce code beginning ingres delivered first test products generally ready widespread use ingres similar system r number ways including use language data access known quel time ingres moved emerging sql standard ibm one test implementation relational model prtv production one business system discontinued honeywell wrote mrds multics two new implementations alphora dataphor rel dbms implementations usually called relational actually sql dbmss university michigan began development micro information management system based dl childs settheoretic data model university hosted debate codd bachman bruce lindsay ibm later described throwing lightning bolts micro used manage large data sets us department labor us environmental protection agency reers university alberta university michigan wayne state university ran ibm mainframe computers using michigan terminal system system remained production integrated approach main article database machine attempts made build database systems integrated hardware software underlying philosophy integration would provide higher performance lower cost examples ibm system early offering teradata britton lee inc database machine another approach hardware support database management icls cafs accelerator hardware disk controller programmable capabilities long term efforts generally unsuccessful specialized database machines could keep pace rapid development progress generalpurpose computers thus database systems nowadays software systems running generalpurpose hardware using generalpurpose computer data storage however idea still pursued certain applications companies like netezza oracle exadata late sql dbms ibm formed team led codd started working prototype system system r despite opposition others company first version ready work started multitable systems data could split data record optional stored single large chunk subsequent multiuser versions tested customers time standardized query language sql added codds ideas establishing workable superior codasyl pushing ibm develop true production version system r known sqlds later database ibm db larry ellisons oracle database simply oracle started different chain based ibms papers system r though oracle v implementations completed oracle version ellison beat ibm market stonebraker went apply lessons ingres develop new database postgres known postgresql postgresql often used global missioncritical applications org info domain name registries use primary data store many large companies financial institutions sweden codds paper also read mimer sql developed mids uppsala university project consolidated independent enterprise another data model entityrelationship model emerged gained popularity database design emphasized familiar description earlier relational model later entityrelationship constructs retrofitted data modeling construct relational model difference two become irrelevant desktop besides ibm various software companies sybase informix corporation large computer hardware vendors database systems decs vax rdbvms decade ushered age desktop computing new computers empowered users spreadsheets like lotus database software like dbase dbase product lightweight easy computer user understand box c wayne ratliff creator dbase stated dbase different programs like basic c fortran cobol lot dirty work already done data manipulation done dbase instead user user concentrate rather mess dirty details opening reading closing files managing space allocation dbase one top selling software titles early objectoriented start decade databases become billiondollar industry ten years along rise objectoriented programming saw growth data various databases handled programmers designers began treat data databases objects say persons data database persons attributes address phone number age considered belong person instead extraneous data allows relations data related objects attributes individual fields term objectrelational impedance mismatch described inconvenience translating programmed objects database tables object databases objectrelational databases attempt solve problem providing objectoriented language sometimes extensions sql programmers use alternative purely relational sql programming side libraries known objectrelational mappings orms attempt solve problem nosql newsql main articles nosql newsql database sales grew rapidly dotcom bubble end rise ecommerce popularity open source databases mysql grown since extent ken jacobs oracle said perhaps guys us ibm xml databases type structured documentoriented database allows querying based xml document attributes xml databases mostly used applications data conveniently viewed collection documents structure vary flexible highly rigid examples include scientific articles patents tax filings personnel records nosql databases often fast require fixed table schemas avoid join operations storing denormalized data designed scale horizontally recent years strong demand massively distributed databases high partition tolerance according cap theorem impossible distributed system simultaneously provide consistency availability partition tolerance guarantees distributed system satisfy two guarantees time three reason many nosql databases using called eventual consistency provide availability partition tolerance guarantees reduced level data consistency newsql class modern relational databases aims provide scalable performance nosql systems online transaction processing readwrite workloads still using sql maintaining acid guarantees traditional database system use cases section cite sources please help improve section adding citations reliable sources unsourced material may challenged removed march learn remove message databases used support internal operations organizations underpin online interactions customers suppliers see enterprise software databases used hold administrative information specialized data engineering data economic models examples include computerized library systems flight reservation systems computerized parts inventory systems many content management systems store websites collections webpages database classification one way classify databases involves type contents example bibliographic documenttext statistical multimedia objects another way application area example accounting music compositions movies banking manufacturing insurance third way technical aspect database structure interface type section lists adjectives used characterize different kinds databases inmemory database database primarily resides main memory typically backedup nonvolatile computer data storage main memory databases faster disk databases often used response time critical telecommunications network equipment active database includes eventdriven architecture respond conditions inside outside database possible uses include security monitoring alerting statistics gathering authorization many databases provide active database features form database triggers cloud database relies cloud technology database dbms reside remotely cloud applications developed programmers later maintained used endusers web browser open apis data warehouses archive data operational databases often external sources market firms warehouse becomes central source data use managers endusers may access operational data example sales data might aggregated weekly totals converted internal product codes use upcs compared acnielsen data basic essential components data warehousing include extracting analyzing mining data transforming loading managing data make available use deductive database combines logic programming relational database distributed database one data dbms span multiple computers documentoriented database designed storing retrieving managing documentoriented semi structured information documentoriented databases one main categories nosql databases embedded database system dbms tightly integrated application software requires access stored data way dbms hidden applications endusers requires little ongoing maintenance enduser databases consist data developed individual endusers examples collections documents spreadsheets presentations multimedia files several productswhich exist support databases federated database system comprises several distinct databases dbms handled single database federated database management system fdbms transparently integrates multiple autonomous dbmss possibly different types case would also heterogeneous database system provides integrated conceptual view sometimes term multidatabase used synonym federated database though may refer less integrated eg without fdbms managed integrated schema group databases cooperate single application case typically middleware used distribution typically includes atomic commit protocol acp eg twophase commit protocol allow distributed global transactions across participating databases graph database kind nosql database uses graph structures nodes edges properties represent store information general graph databases store graph distinct specialized graph databases triplestores network databases array dbms kind nosql dbms allows modeling storage retrieval usually large multidimensional arrays satellite images climate simulation output hypertext hypermedia database word piece text representing object eg another piece text article picture film hyperlinked object hypertext databases particularly useful organizing large amounts disparate information example useful organizing online encyclopedias users conveniently jump around text world wide web thus large distributed hypertext database knowledge base abbreviated kb kb special kind database knowledge management providing means computerized collection organization retrieval knowledge also collection data representing problems solutions related experiences mobile database carried synchronized mobile computing device operational databases store detailed data operations organization typically process relatively high volumes updates using transactions examples include customer databases record contact credit demographic information businesss customers personnel databases hold information salary benefits skills data employees enterprise resource planning systems record details product components parts inventory financial databases keep track organizations money accounting financial dealings parallel database seeks improve performance parallelization tasks loading data building indexes evaluating queries major parallel dbms architectures induced underlying hardware architecture shared memory architecture multiple processors share main memory space well data storage shared disk architecture processing unit typically consisting multiple processors main memory units share storage sharednothing architecture processing unit main memory storage probabilistic databases employ fuzzy logic draw inferences imprecise data realtime databases process transactions fast enough result come back acted right away spatial database store data multidimensional features queries data include locationbased queries like closest hotel area temporal database builtin time aspects example temporal data model temporal version sql specifically temporal aspects usually include validtime transactiontime terminologyoriented database builds upon objectoriented database often customized specific field unstructured data database intended store manageable protected way diverse objects fit naturally conveniently common databases may include email messages documents journals multimedia objects etc name may misleading since objects highly structured however entire possible object collection fit predefined structured framework established dbmss support unstructured data various ways new dedicated dbmss emerging database management system connolly begg define database management system dbms software system enables users define create maintain control access database examples dbmss include mysql mariadb postgresql microsoft sql server oracle database microsoft access dbms acronym sometimes extended indicate underlying database model rdbms relational oodbms object oriented ordbms objectrelational model extensions indicate characteristics ddbms distributed database management systems functionality provided dbms vary enormously core functionality storage retrieval update data codd proposed following functions services fullyfledged general purpose dbms provide data storage retrieval update user accessible catalog data dictionary describing metadata support transactions concurrency facilities recovering database become damaged support authorization access update data access support remote locations enforcing constraints ensure data database abides certain rules also generally expected dbms provide set utilities purposes may necessary administer database effectively including import export monitoring defragmentation analysis utilities core part dbms interacting database application interface sometimes referred database engine often dbmss configuration parameters statically dynamically tuned example maximum amount main memory server database use trend minimize amount manual configuration cases embedded databases need target zeroadministration paramount large major enterprise dbmss tended increase size functionality involved thousands human years development effort throughout lifetimea early multiuser dbms typically allowed application reside computer access via terminals terminal emulation software clientserver architecture development application resided client desktop database server allowing processing distributed evolved multitier architecture incorporating application servers web servers end user interface via web browser database directly connected adjacent tier generalpurpose dbms provide public application programming interfaces api optionally processor database languages sql allow applications written interact manipulate database special purpose dbms may use private api specifically customized linked single application example email system performs many functions generalpurpose dbms message insertion message deletion attachment handling blocklist lookup associating messages email address forth however functions limited required handle email application main article database application external interaction database via application program interfaces dbms range database tool allows users execute sql queries textually graphically website happens use database store information application program interface programmer code interactions database sometimes referred datasource via application program interface api via database language particular api language chosen need supported dbms possibly indirectly via preprocessor bridging api apis aim database independent odbc commonly known example common apis include jdbc adonet database data control language dcl controls access data data definition language ddl defines data types creating altering dropping tables relationships among data manipulation language dml performs tasks inserting updating deleting data occurrences data query language dql allows ing information computing derived information database languages specific particular data model notable examples include sql combines roles data definition data manipulation query single language one first commercial languages relational model although departs respects relational model described codd example rows columns table ordered sql became standard american national standards institute ansi international organization standardization iso standards regularly enhanced since supported varying degrees conformance mainstream commercial relational dbmss oql object model language standard object data management group influenced design newer query languages like jdoql ejb ql xquery standard xml query language implemented xml database systems marklogic exist relational databases xml capability oracle db also inmemory xml processors saxon sqlxml combines xquery sql database language may also incorporate features like dbmsspecific configuration storage engine management computations modify query results like counting summing averaging sorting grouping crossreferencing constraint enforcement eg automotive database allowing one engine type per car application programming interface version query language programmer convenience storage main articles computer data storage database engine database storage container physical materialization database comprises internal physical level database architecture also contains information needed eg metadata data data internal data structures reconstruct conceptual level external level internal level needed databases digital objects contain three layers information must stored data structure semantics proper storage three layers needed future preservation longevity database putting data permanent storage generally responsibility database engine aka storage engine though typically accessed dbms underlying operating system often using operating systems file systems intermediates storage layout storage properties configuration settings extremely important efficient operation dbms thus closely maintained database administrators dbms operation always database residing several types storage eg memory external storage database data additional needed information possibly large amounts coded bits data typically reside storage structures look completely different way data look conceptual external levels ways attempt optimize best possible levels reconstruction needed users programs well computing additional types needed information data eg querying database dbmss support specifying character encoding used store data multiple encodings used database various lowlevel database storage structures used storage engine serialize data model written medium choice techniques indexing may used improve performance conventional storage roworiented also columnoriented correlation databases materialized views main article materialized view often storage redundancy employed increase performance common example storing materialized views consist frequently needed external views query results storing views saves expensive computing time needed downsides materialized views overhead incurred updating keep synchronized original updated database data cost storage redundancy replication see also replication computing database replication occasionally database employs storage redundancy database objects replication one copies increase data availability improve performance simultaneous multiple enduser accesses database object provide resiliency case partial failure distributed database updates replicated object need synchronized across object copies many cases entire database replicated virtualization data virtualization data used remains original locations realtime access established allow analytics across multiple sources aid resolving technical difficulties compatibility problems combining data various platforms lowering risk error caused faulty data guaranteeing newest data used furthermore avoiding creation new database containing personal information make easier comply privacy regulations however data virtualization connection necessary data sources must operational local copy data one main drawbacks approach security article appears contradict article database security please discuss talk page remove message contradictions resolved march main article database security database security deals various aspects protecting database content owners users ranges protection intentional unauthorized database uses unintentional database accesses unauthorized entities eg person computer program database access control deals controlling person certain computer program allowed access information database information may comprise specific database objects eg record types specific records data structures certain computations certain objects eg query types specific queries using specific access paths former eg using specific indexes data structures access information database access controls set special authorized database owner personnel uses dedicated protected security dbms interfaces may managed directly individual basis assignment individuals privileges groups elaborate models assignment individuals groups roles granted entitlements data security prevents unauthorized users viewing updating database using passwords users allowed access entire database subsets called subschemas example employee database contain data individual employee one group users may authorized view payroll data others allowed access work history medical data dbms provides way interactively enter update database well interrogate capability allows managing personal databases data security general deals protecting specific chunks data physically ie corruption destruction removal eg see physical security interpretation parts meaningful information eg looking strings bits comprise concluding specific valid creditcard numbers eg see data encryption change access logging records accessed attributes changed changed logging services allow forensic database audit later keeping record access occurrences changes sometimes applicationlevel code used record changes rather leaving database monitoring set attempt detect security breaches therefore organizations must take database security seriously many benefits provides organizations safeguarded security breaches hacking activities like firewall intrusion virus spread ransom ware helps protecting companys essential information shared outsiders cause transactions concurrency information concurrency control database transactions used introduce level fault tolerance data integrity recovery crash database transaction unit work typically encapsulating number operations database eg reading database object writing acquiring releasing lock etc abstraction supported database also systems transaction well defined boundaries terms programcode executions included transaction determined transactions programmer via special transaction commands acronym acid describes ideal properties database transaction atomicity consistency isolation durability migration see also data migration database migration database built one dbms portable another dbms ie dbms run however situations desirable migrate database one dbms another reasons primarily economical different dbmss may different total costs ownership tcos functional operational different dbmss may different capabilities migration involves databases transformation one dbms type another transformation maintain possible database related application ie related application programs intact thus databases conceptual external architectural levels maintained transformation may desired also aspects architecture internal level maintained complex large database migration may complicated costly onetime project factored decision migrate spite fact may exist help migration specific dbmss typically dbms vendor provides help import databases popular dbmss building maintaining tuning main article database tuning designing database application next stage building database typically appropriate generalpurpose dbms selected used purpose dbms provides needed user interfaces used database administrators define needed applications data structures within dbmss respective data model user interfaces used select needed dbms parameters like security related storage allocation parameters etc database ready data structures needed components defined typically populated initial applications data database initialization typically distinct project many cases using specialized dbms interfaces support bulk insertion making operational cases database becomes operational empty application data data accumulated operation database created initialized populated needs maintained various database parameters may need changing database may need tuned tuning better performance applications data structures may changed added new related application programs may written add applications functionality etc backup restore main article backup sometimes desired bring database back previous state many reasons eg cases database found corrupted due software error updated erroneous data achieve backup operation done occasionally continuously desired database state ie values data embedding databases data structures kept within dedicated backup files many techniques exist effectively decided database administrator bring database back state eg specifying state desired point time database state files used restore state static analysis static analysis techniques software verification applied also scenario query languages particular abstract interpretation framework extended field query languages relational databases way support sound approximation techniques semantics query languages tuned according suitable abstractions concrete domain data abstraction relational database systems many interesting applications particular security purposes finegrained access control watermarking etc miscellaneous features dbms features might include database logs helps keeping history executed functions graphics component producing graphs charts especially data warehouse system query optimizer performs query optimization every query choose efficient query plan partial order tree operations executed compute query result may specific particular storage engine hooks database design application programming application program maintenance database performance analysis monitoring database configuration monitoring dbms hardware configuration dbms related database may span computers networks storage units related database mapping especially distributed dbms storage allocation database layout monitoring storage migration etc increasingly calls single system incorporates core functionalities build test deployment framework database management source control borrowing developments software industry market offerings devops database design modeling main article database design first task database designer produce conceptual data model reflects structure information held database common approach develop entityrelationship model often aid drawing another popular approach unified modeling language successful data model accurately reflect possible state external world modeled example people one phone number allow information captured designing good conceptual data model requires good understanding application domain typically involves asking deep questions things interest organization like customer also supplier product sold two different forms packaging product different products plane flies new york dubai via frankfurt one flight two maybe even three answers questions establish definitions terminology used entities customers products flights flight segments relationships attributes producing conceptual data model sometimes involves input business processes analysis workflow organization help establish information needed database left example help deciding whether database needs hold historic data well current data produced conceptual data model users happy next stage translate schema implements relevant data structures within database process often called logical database design output logical data model expressed form schema whereas conceptual data model theory least independent choice database technology logical data model expressed terms particular database model supported chosen dbms terms data model database model often used interchangeably article use data model design specific database database model modeling notation used express design popular database model generalpurpose databases relational model precisely relational model represented sql language process creating logical database design using model uses methodical approach known normalization goal normalization ensure elementary fact recorded one place insertions updates deletions automatically maintain consistency final stage database design make decisions affect performance scalability recovery security like depend particular dbms often called physical database design output physical data model key goal stage data independence meaning decisions made performance optimization purposes invisible endusers applications two types data independence physical data independence logical data independence physical design driven mainly performance requirements requires good knowledge expected workload access patterns deep understanding features offered chosen dbms another aspect physical database design security involves defining access control database objects well defining security levels methods data models main article database model collage five types database models database model type data model determines logical structure database fundamentally determines manner data stored organized manipulated popular example database model relational model sql approximation relational uses tablebased format common logical data models databases include al databases hierarchical database model network model graph database relational model entityrelationship model enhanced entityrelationship model object model document model entityattributevalue model star schema objectrelational database combines two related structures physical data models include inverted index flat file models include multidimensional model array model multivalue model specialized models optimized particular types data xml database semantic model content store event store time series model external conceptual internal views traditional view data database management system provides three views database data external level defines group endusers sees organization data database single database number views external level conceptual level logical level unifies various external views compatible global view provides synthesis external views scope various database endusers rather interest database application developers database administrators internal level physical level internal organization data inside dbms concerned cost performance scalability operational matters deals storage layout data using storage structures indexes enhance performance occasionally stores data individual views materialized views computed generic data performance justification exists redundancy balances external views performance requirements possibly conflicting attempt optimize overall performance across activities typically one conceptual internal view data number different external views allows users see database information businessrelated way rather technical processing viewpoint example financial department company needs payment details employees part companys expenses need details employees interest human resources department thus different departments need different views companys database threelevel database architecture relates concept data independence one major initial driving forces relational model idea changes made certain level affect view higher level example changes internal level affect application programs written using conceptual level interfaces reduces impact making physical changes improve performance conceptual view provides level indirection internal external one hand provides common view database independent different external view structures hand abstracts away details data stored managed internal level principle every level even every external view presented different data model practice usually given dbms uses data model external conceptual levels eg relational model internal level hidden inside dbms depends implementation requires different level detail uses types data structure types database technology active topic since academia development groups companies example ibm activity includes theory development prototypes notable topics included models atomic transaction concept related concurrency control techniques query languages query optimization methods raid database area several dedicated academic journals example acm transactions database systemstods data knowledge engineeringdke annual conferences eg acm sigmod acm pods vldb ieee icde see also topical guide see outline databases comparison database comparison object database management systems comparison objectrelational database management systems comparison relational database management systems data hierarchy data bank data store database theory database testing databasecentric architecture datalog databaseasipc dbos flatfile database inp database journal database management questionfocused dataset notes article quotes development time five years involving people db release alone references ullman widom p update definition meaning merriamwebster archived original feb retrieval definition meaning merriamwebster archived original jun administration definition meaning merriamwebster archived original dec tsitchizris lochovsky beynondavies nelson nelson bachman topdb top database index pyplgithubio database n oed online oxford university press june retrieved july subscription required ibm corporation october ibm information management system ims transaction database servers delivers high performance low total cost ownership retrieved feb b c rdbms plenary early years pdf interview interviewed burton grad computer history museum retrieved codd hershey easthope north childs childs b kahn dl rumelhart bl bronson october micro information management system version reference manual institute labor industrial relations ilir university michigan wayne state university oracle th anniversary timeline pdf archived pdf original retrieved august b c rdbms plenary session later years pdf interview interviewed burton grad computer history museum retrieved interview wayne ratliff foxpro history retrieved development objectoriented dbms portland oregon united states pages isbn jordan meghan nosql latency scylladb retrieved sql vs nosql full comparison features differences wwwtestgorillacom retrieved graves steve cots databases embedded systems archived wayback machine embedded computing design magazine january retrieved august argumentation artificial intelligence iyad rahwan guillermo r simari owl dl semantics retrieved december connolly begg p connolly begg pp connolly begg p chong et al connolly begg pp connolly begg p chapple structured query language sql international business machines october retrieved wagner ramalho jc faria l helder coutada december database preservation toolkit flexible tool normalize give access databases biblioteca nacional de portugal university minho paiho satu tuominen pekka rkman jyri ylikerl markus pajula juha siikavirta hanne opportunities collected city data smart cities iet smart cities doismc issn scid david chan victoria chiu miklos vasarhelyi continuous auditing theory application st ed bingley uk emerald publishing isbn oclc halder cortesi ben linders january database administration fits devops retrieved april itlnistgov integration definition information modeling idefix archived wayback machine december b date pp sources bachman charles w programmer navigator communications acm doi beynondavies paul database systems rd ed palgrave macmillan isbn chapple mike sql fundamentals databases aboutcom archived original february retrieved january childs david l description settheoretic data structure pdf technical report concomp conversational use computers project university michigan technical report childs david l b feasibility settheoretic data structure general structure based reconstituted definition pdf technical report concomp conversational use computers project university michigan technical report chong raul f wang xiaomei dang michael snow dwaine r introduction db understanding db learning visually examples nd ed ibm press pearson plc isbn retrieved march codd edgar f relational model data large shared data banks pdf communications acm doi scid connolly thomas begg carolyn e database systems practical approach design implementation management th ed pearson isbn date c j introduction database systems th ed pearson isbn halder raju cortesi agostino abstract interpretation database query languages pdf computer languages systems structures doijcl issn hershey william easthope carol set theoretic data structure retrieval language spring joint computer conference may acm sigir forum vol pp doi nelson anne fulcher nelson william harris morehead building electronic commerce web database constructions prentice hall isbn north ken march sets data models data independence dr dobbs archived original october tsitchizris dionysios c lochovsky fred h data models prenticehall isbn ullman jeffrey widom jennifer first course database systems prenticehall isbn wagner michael sqlxml evaluierung der standardkonformitt ausgewhlter datenbanksysteme diplomica verlag isbn reading ling liu tamer zsu eds encyclopedia database systems p illus isbn gray j reuter transaction processing concepts techniques st edition morgan kaufmann publishers kroenke david david j auer database concepts rd ed new york prentice raghu ramakrishnan johannes gehrke database management systems abraham silberschatz henry f korth sudarshan database system concepts lightstone teorey nadeau physical database design database professionals guide exploiting indexes views storage morgan kaufmann press isbn teorey lightstone nadeau database modeling design logical design th edition morgan kaufmann press isbn cmu database courses playlist mit ocw fall database systems berkeley cs w external links db file extension information files db extension database wikipedias sister projectsdefinitions wiktionarymedia commonsnews wikinewsquotations wikiquotetexts wikisourcetextbooks wikibooksresources wikiversity links related articles vtecomputer sciencenote template roughly follows acm computing classification systemhardware printed circuit board peripheral integrated circuit verylargescale integration system chip soc energy consumption green computing electronic design automation hardware acceleration processor size form computer systems organization computer architecture computational complexity dependability embedded system realtime computing cyberphysical system fault tolerance wireless sensor network networks network architecture network protocol network components network scheduler network performance evaluation network service software organization interpreter middleware virtual machine operating system software quality software notations programming paradigm programming domainspecific software framework integrated development environment software configuration management software library software repository software development control variable software development process requirements analysis software design software construction software deployment software engineering software maintenance programming team opensource model theory computation model computation stochastic formal computability theory computational complexity theory logic semantics algorithms algorithm design analysis algorithms algorithmic efficiency randomized algorithm computational geometry mathematics computing discrete mathematics probability statistics mathematical software information theory mathematical analysis numerical analysis theoretical computer science information systems database management system information storage systems enterprise information system social information systems geographic information system decision support system process control system multimedia information system data mining digital library computing platform digital marketing world wide web information retrieval security cryptography formal methods security hacker security services intrusion detection system hardware security network security information security application security humancentered computing interaction design augmented reality virtual reality social computing ubiquitous computing visualization accessibility humancomputer interaction mobile computing concurrency concurrent computing parallel computing distributed computing multithreading multiprocessing artificial intelligence natural language processing knowledge representation reasoning computer vision automated planning scheduling methodology control method philosophy artificial intelligence distributed artificial intelligence machine learning supervised learning unsupervised learning reinforcement learning multitask learning crossvalidation graphics animation rendering photograph manipulation graphics processing unit image compression solid modeling applied computing quantum computing ecommerce enterprise software computational mathematics computational physics computational chemistry computational biology computational social science computational engineering differentiable computing computational healthcare digital art electronic publishing cyberwarfare electronic voting video games word processing operations educational technology document management category outline glossaries vtedatabasemain requirements theory database object models database management system machine engine server application connection datasource dsn administrator synonym lock types data manipulation query information retrieval security activity monitoring audit forensics negative database design entities relationships enhanced notation normalization schema refactoring cardinality programming abstraction layer objectrelational mapping management virtualization tuning caching migration preservation integrity lists academic biological biodiversity facial expression online online music online real estate see also databasecentric architecture intelligent database twophase locking locks ordered sharing load file publishing halloween problem log shipping wikiproject category vtedatabase management systemstypes objectoriented comparison relational list comparison keyvalue columnoriented list documentoriented widecolumn store graph nosql newsql inmemory list multimodel comparison cloud blockchainbased database concepts database acid armstrongs axioms codds rules cap theorem crud null candidate key foreign key pacelc design principle superkey surrogate key unique key objects relation table column row view transaction transaction log trigger index stored procedure cursor partition components concurrency control data dictionary jdbc xqj odbc query query rewriting system query plan functions administration query optimization replication sharding related topics database models database normalization database storage distributed database federated database system referential integrity relational algebra relational calculus relational model objectrelational database transaction processing category outline vtedata warehousescreating data warehouseconcepts database dimension dimensional modeling fact olap star schema snowflake schema reverse star schema aggregate single version truth variants columnoriented dbms data hub data mesh ensemble modeling patterns anchor modeling data vault modeling focal point modeling holap molap rolap operational data store elements data dictionarymetadata data mart sixth normal form surrogate key fact fact table earlyarriving fact measure dimension dimension table degenerate slowly changing filling extract transform load etl extract load transform elt extract transform load using data warehouseconcepts business intelligence dashboard data mining decision support system dss olap cube data warehouse automation multidimensional expressions mdx xml analysis xmla business intelligence software reporting software spreadsheet relatedpeople bill inmon information factory ralph kimball enterprise bus dan linstedt products comparison olap servers data warehousing products producers vtesemantic webbackground databases hypertext internet ontologies semantics semantic networks world wide web subtopics dataspaces hyperdata linked data rulebased systems applications semantic analytics semantic computing semantic mapper semantic matching semantic publishing semantic reasoner semantic semantic serviceoriented architecture semantic wiki solid related topics collective intelligence description logic folksonomy geotagging information architecture ixbrl knowledge extraction knowledge management knowledge representation reasoning library digital library digital humanities metadata references topic map web web engineering web science trust standardssyntax supporting technologies http iri uri rdf triples rdfxml jsonld turtle trig notation ntriples trix wc standard rrid sparql xml semantic html schemas ontologies rules common logic owl rdfs rule interchange format semantic web rule semantic annotation coins grddl microdata microformats rdfa sawsdl facebook platform common vocabularies bibframe bibo doap dublin core modsmads foaf schemaorg sioc skos microformat vocabularies hatom hcalendar hcard hproduct hrecipe hreview authority control databases nationalgermanyunited statesfrancebnf datajapanczech republicisraelothernaraencyclopedia modern ukraine retrieved httpsenwikipediaorgwindexphptitledatabaseoldiddatabasemanagementsystem categories databasesdatabase management systemshidden categories pages containing links subscriptiononly contentwebarchive template wayback linksarticles short descriptionshort description matches wikidataarticles merged may articles mergedwikipedia pages semiprotected vandalismall articles unsourced statementsarticles unsourced statements january articles containing potentially dated statements articles containing potentially dated statementsarticles unsourced statements march articles containing potentially dated statements articles unsourced statements may articles needing additional references march articles needing additional referencesarticles unsourced statements december articles specifically marked weaselworded phrasesarticles specifically marked weaselworded phrases december articles contradicting articlespages using sister project links wikidata namespace mismatchpages using sister project links wikidata mismatchpages using sister project links default page last edited june utc text available creative commons attributionsharealike license additional terms may apply using site agree terms use privacy policy wikipedia registered trademark wikimedia foundation inc nonprofit organization privacy policy wikipedia disclaimers contact wikipedia code conduct developers statistics cookie statement mobile view toggle table contents database add topic